package #{package}

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ich.core.base.JsonUtils;
import com.ich.core.base.ObjectHelper;
import com.ich.core.http.entity.HttpEasyUIResponse;
import com.ich.core.http.entity.HttpResponse;
import com.ich.core.http.entity.PageView;
import com.ich.core.http.entity.SortView;
import com.ich.module.annotation.Link;
#{import}

@Controller
#{HeaderMapping}
public class #{EntityName}Controller extends AdminController{

    @Autowired
    private #{EntityName}Service #{EntityLName}Service;
	
	@RequestMapping(value="#{MethodMapping}/add",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
	@ResponseBody
	@Link(name = "#{EntityCNName}-新增",code = "#{menu}-add", 
		level = Link.LEVEL_WRITE,parent = "#{menu}")
	public String add(#{EntityName} #{EntityLName},String callback){
		HttpResponse result = this.#{EntityLName}Service.add#{EntityName}(#{EntityLName});
		return callback(callback,result);
	}
	
	@RequestMapping(value="#{MethodMapping}/edit",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
	@ResponseBody
	@Link(name = "#{EntityCNName}-修改",code = "#{menu}-edit", 
		level = Link.LEVEL_EDIT,parent = "#{menu}")
	public String edit(#{EntityName} #{EntityLName},String callback){
		HttpResponse result = this.#{EntityLName}Service.edit#{EntityName}(#{EntityLName});
		return callback(callback,result);
	}
	
	@RequestMapping(value="#{MethodMapping}/editstatus",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
	@ResponseBody
	@Link(name = "#{EntityCNName}-修改状态",code = "#{menu}-editstatus", 
		level = Link.LEVEL_EDIT,parent = "#{menu}")
	public String editstatus(#{IDParams},Integer status,String callback){
		HttpResponse result = this.#{EntityLName}Service.edit#{EntityName}Status(#{IDs},status);
		return callback(callback,result);
	}
	
	@RequestMapping(value="#{MethodMapping}/delete",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
	@ResponseBody
	@Link(name = "#{EntityCNName}-删除",code = "#{menu}-delete", 
		level = Link.LEVEL_DETELE,parent = "#{menu}")
	public String delete(#{IDParams},String callback){
		HttpResponse result = this.#{EntityLName}Service.delete#{EntityName}(#{IDs});
		return callback(callback,result);
	}
	
	@RequestMapping(value="#{MethodMapping}/list",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
	@ResponseBody
	@Link(name = "#{EntityCNName}-分页列表",code = "#{menu}-list", 
		level = Link.LEVEL_READ,parent = "#{menu}")
	public String list(PageView page,SortView sort,AdminQuery query,String callback){
		List<?> list = this.#{EntityLName}Service.findAdminList(page,sort,query);
		Map<String,Object> model = getSuccessMap();
		model.put(HttpEasyUIResponse.HTTP_DATA_PAGE_TOTAL, page.getRowCount());
		model.put(HttpEasyUIResponse.HTTP_DATA_PAGE_ROWS, list);		
		return callback(callback,JsonUtils.objectToJson(model));
	}

    @RequestMapping(value="#{MethodMapping}/detail",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
    @ResponseBody
    @Link(name = "#{EntityCNName}-详情",code = "#{menu}-detail",
        level = Link.LEVEL_READ,parent = "#{menu}")
    public String detail(#{IDParams},String callback){
        #{EntityName} entity = this.#{EntityLName}Service.findById(#{IDs});
        return callback(callback,new HttpResponse(HttpResponse.HTTP_OK,HttpResponse.HTTP_MSG_OK,entity));
    }

    @RequestMapping(value="#{MethodMapping}/export",produces= MediaType.APPLICATION_JSON_VALUE+";charset=utf-8")
        @ResponseBody
        @Link(name = "#{EntityCNName}-导出",code = "#{menu}-export",
        	level = Link.LEVEL_READ,parent = "#{menu}")
        public void export(HttpServletResponse response,PageView page, SortView sort,AdminQuery query,String callback){
            this.#{EntityLName}Service.findAdminList(page,sort,query);
            PageView exview = new PageView();
            if(page.getRowCount()>1000000){
                try {
                    response.getWriter().print(callback(callback, JsonUtils.objectToJson(getFailMap("导出记录量不得大于1000000条"))));
                    response.getWriter().flush();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                return ;
            }
        	if(page.getRowCount()>0)exview.setRows((int)page.getRowCount());
        	List<Map<String,Object>> list =  this.#{EntityLName}Service.findAdminList(exview,sort,query);
            Map<String,String> headMap = new LinkedHashMap<String,String>();
            String btime = ObjectHelper.isEmpty(query.getBtime())?"上线":query.getBtime();
            String etime = ObjectHelper.isEmpty(query.getEtime())?"至今":query.getEtime();
            String title = "#{EntityCNName}（"+btime+"~"+etime+"）";
            //TODO 表头 + 状态转换模板
            for(Map<String,Object> map : list) {
    			Integer status = (Integer) map.get("status");
    			if (ObjectHelper.isNotEmpty(status)) {
    				if (status == 1){
    					map.put("status", "正常");
    				}else{
    					map.put("status", "注销");
    				}
    			}
    		}
    #{export_head}
            ExcelUtil.downloadExcelFile(title,headMap,list,response);
        }
	
}